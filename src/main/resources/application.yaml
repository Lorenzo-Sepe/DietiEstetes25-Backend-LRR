#SERVER
server:
  port: 8081
  servlet:
    context-path: /api
      # context-path: parte di path che si frappone automaticamente tra host ed endpoint
      # http://{hostname}:{port}/{context-path}/{uri}
    # http://localhost:8081/api/....
  compression:
    enabled: true
    min-response-size: 2KB

# SPRING BOOT + DATABASE + MAIL
spring:
  application:
    name: dietiestates25
  servlet:
    multipart:
      enabled: true
      max-file-size: 1000MB
      max-request-size: 1000MB


  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
        # create-drop: crea tabelle all'avvio dell'applicazione e le distrugge quando la stoppo
        # validated: confronta le entita' del progetto con le tabelle del db: se ci sono anomalie, solleva eccezione
        # none: da usare in ambiente di produzione: non viene riportata alcuna modifica al db
        # update: aggiorna il db con le tabelle/colonne nuove; non elimina colonne che non hanno piu' corrispondenza con l'entita'
    properties:
      query:
        plan_cache_max_size: 1024
        plan_parameter_metadata_max_size: 64
        in_clause_parameter_padding: true
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
    open-in-view: false
    defer-datasource-initialization: true

  # all'avvio dell'applicazione viene eseguito data.sql presente in resource
  sql.init.mode: always

  mail:
    # host: smtp.gmail.com
    host: ${MAIL_SMTP}
    # port: 587
    port: ${MAIL_PORT}
    # Nel caso di google lo username corrisponde all'email SENZA '@gmail.com'
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            required: true

spring-doc:
  swagger-ui:
    enabled: true
    # http://localhost:8081/api/swagger-ui/index.html
    path: /swagger-ui/index.html
    tags-sorter: alpha
    display-request-duration: true


# LOGGING
logging:
  level:
    root: INFO
    org.springframework.security: DEBUG
    it.unina.dietiestates25: DEBUG
  file.name: /Users/Public/dietiestates25/log/dietiestates25_log.txt
  # Rolling policies
  logback:
    rolling-policy:
      max-history: 7
      max-file-size: 10MB
      file-name-pattern: /Users/Public/dietiestates25/log/%d{yyyy-MM}/dietiestates25.%d{yyyy-MM-dd}.%i.txt
      total-size-cap: 1GB




# CUSTOM PROPERTIES
application:
  security:
    geo-api:
      secret-key: 89dcc279975c4ca2bc1f39fb349bc4da
      base-url: https://api.geoapify.com/v2/places?categories={categoria}&filter=circle:{longitudine},{latitudine},500&apiKey={apiKey}
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      auth0-domain: ${AUTH0_DOMAIN}
      # 12 ORE in millisecondi
      expiration: 43200000

  image:
    avatar:
      # dimensione dell'immagine in byte -> 10240 = 10kb
      size: 10240
      width: 512
      height: 512
      extensions: image/jpg,image/jpeg,image/png,image/webp
    post:
      # 50Kb
      size: 51200
      width: 600
      height: 200
      extensions: image/jpg,image/jpeg,image/webp
      imagePath: /Users/Public/dietiestates25/annuncio/images/
